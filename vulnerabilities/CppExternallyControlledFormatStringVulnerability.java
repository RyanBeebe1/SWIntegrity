
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;


public class CppExternallyControlledFormatStringVulnerability implements Vulnerability{
	
	public List<Integer> run(Analyzer ana){
		//convert analyzer to appropriate Type
		CppAnalyzer cppana = (CppAnalyzer)ana;
		// exploitable functions
		String printFunctions [] = {"printf", "fprintf", "fprint", "sprintf", "snprintf", "vfprintf", "vprintf", "vsprintf", "vsnprintf"};
		 
		String fileContents = cppana.getFileContents();
		
		fileContents.toLowerCase();
		
		String[] temp=fileContents.split(" ");
		
		HashSet<Integer> vulnLines = new HashSet<>();

		for(String key: printFunctions)
		{
			if(fileContents.contains(key))
			{
				for(int index = 0; index <temp.length; index++)
				{
					if(temp[index].contains(key))
					{
						vulnLines.add(cppana.getSymbolToLine().get(index));
					}
				}
			}
		}

		List<Integer> lines=new LinkedList<>();
		for(Integer number:vulnLines) {
			lines.add(number);
		}
		return lines;
	}
	
	
	
	
	
}
