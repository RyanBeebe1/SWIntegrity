import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.io.LineNumberReader;

/**
 * This code contains the test for CWE-467: use of sizeOf() on a pointer type in
 * c++ https://cwe.mitre.org/data/definitions/467.html
 * 
 * @author Ryan Beebe
 * 
 * 
 */
public class CppSizeOfOnPointerVulnerability implements Vulnerability {

	@Override
	public List<Integer> run(Analyzer ana) {
		List<Integer> lineNumber = new LinkedList<>();
		CppAnalyzer cppana = (CppAnalyzer) ana;
		List<CppAnalyzer.Pointer> pointers = cppana.getPointersList();
		Iterator<CppAnalyzer.Pointer> pointerator = pointers.iterator();
		ArrayList<String> pointerNames = new ArrayList<>();
		while (pointerator.hasNext()) {
			pointerNames.add(pointerator.next().name);
		}
		String[] split = cppana.getFileContents().split(" ");
		for (int i = 0; i < split.length; i++) {
			if (pointerNames.contains(split[i])) {
				if ((split[i - 1].equals("(") && split[i - 2].equals("sizeof") && !split[i - 1].equals("*"))) {
					lineNumber.add(cppana.getSymbolToLine().get(i));
				}
				else if (split[i - 1].equals("sizeof")) {
					lineNumber.add(cppana.getSymbolToLine().get(i));
				}
			}
		}
		return lineNumber;
	}
}
